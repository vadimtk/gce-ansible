---
- hosts: all
  remote_user: "{{ osuser }}"
  become: yes
  become_user: root
  gather_facts: true
  vars_files:
    - config_nodes.yml

- hosts: worker
  remote_user: "{{ osuser }}"
  become: yes
  become_user: root
  gather_facts: true
  serial: 5
  vars_files:
    - config_nodes.yml

  tasks:

    - name: Create  ext4 filesystem
      filesystem:
        fstype: ext4
        dev: "{{ disk }}"
        force: no
        opts: -E lazy_itable_init=0,lazy_journal_init=0,discard
      when: disk is defined
      tags: mount

    - name: Mount FS
      mount:
        path: "{{ mountdir }}"
        src: "{{ disk }}"
        fstype: ext4
        opts: discard
        state: mounted
      when: disk is defined
      tags: mount

    - name: Chown
      shell: chmod 777 "{{ mountdir }}"
      tags: mount

    - name: clean
      shell: rm -fr "{{ mountdir }}/mysql"
      tags: permission, mount

    - name: create dir
      file:
        path: "{{ mountdir }}/mysql"
        state: directory
      tags: permission, mount

    - name: Chown
      shell: install -m777 -g 0 -d "{{ mountdir }}/mysql"
      tags: permission, mount


    - name: Install nuttcp
      apt:
        name: nuttcp
        state: present

    - name: Disable swap
      shell: >
        swapoff -a

    - name: Start Docker
      systemd:
        name: docker
        state: started

    - name: Reset Kubernetes component
      shell: "kubeadm reset --force"

    - name: Install kubeadm
      shell: |
        kubeadm join --token {{ token }} \
                --discovery-token-unsafe-skip-ca-verification \
                {{ master_ip }}:6443
