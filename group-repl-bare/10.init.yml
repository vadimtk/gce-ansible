---
- hosts: node
  remote_user: "{{ osuser }}"
  become: yes
  become_user: root
  gather_facts: true
  vars_files:
    - mysql_nodes.yml

  tasks:

    - import_tasks: root_tasks.yml
    - import_tasks: network_tasks.yml      

    - name: Add the user MySQL
      user:
        name: mysql
        comment: John Doe

    - name: Update and upgrade apt packages
      apt:
        update_cache: yes

    - name: Install xfsprogs
      apt:
        name: xfsprogs
        state: present

    - name: UnMount FS
      mount:
        path: "{{ mountdir }}"
        src: "{{ disk }}"
        state: unmounted
      when: disk is defined
      tags: mount    

    - name: Create  filesystem
      filesystem:
        fstype: xfs
        dev: "{{ disk }}"
        force: yes
      when: disk is defined

    - name: Mount FS
      mount:
        path: "{{ mountdir }}"
        src: "{{ disk }}"
        fstype: xfs
        opts: noatime
        state: mounted
      when: disk is defined
      tags: mount    
 
    - name: create install dir
      file:
        path: "{{ installdir }}"
        state: "{{ item }}"
      with_items:
        - directory

    - name: Install software-properties-common
      apt:
        name: software-properties-common
        state: present



    - name: Download Server
      get_url:
        url: "{{ downurl[server] }}"
        dest: "{{ installdir }}"
      when: server=="pxc" or server=="mariadb" or server=="ps" or server=="pgr" or server=="pxc8" or server=="mgr"
      tags: download

    - name: Install Server
      unarchive:
        src: "{{ installdir }}/{{ mysqlbin[server] }}.tar.gz"
        dest: "{{ installdir }}"
        remote_src: yes
      when: server=="pxc" or server=="mariadb" or server=="ps" or server=="pgr" or server=="pxc8"
      tags: download

    - name: Install Server
      unarchive:
        src: "{{ installdir }}/{{ mysqlbin[server] }}.tar.xz"
        dest: "{{ installdir }}"
        remote_src: yes
      when: server=="mgr"
      tags: download


    - name: Install packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - libsystemd0
        - numactl
        - python-mysqldb
        - mysql-client

    - name: Stop MySQL
      shell: >
        "{{ installdir }}/{{ mysqlbin[server] }}/bin/mysqladmin" shutdown --socket=/tmp/mysql.sock
      ignore_errors: yes

    - name: Remove datadir
      file:
        path: "{{ mountdir }}/{{ mysqldir }}"
        state: "{{ item }}"
        owner: mysql
        group: mysql
      with_items:
        - absent
        - directory

    - name: Init datadir
      shell: >
        "{{ installdir }}/{{ mysqlbin[server] }}/bin/mysqld" --no-defaults --initialize-insecure --datadir="{{ mountdir }}/{{ mysqldir }}" --user=mysql
      when: server=="pxc" or server=="mgr" or server=="ps" or server=="pgr" or server=="pxc8"

    - name: Init datadir
      shell: >
         "{{ installdir }}/{{ mysqlbin[server] }}/scripts/mysql_install_db"  --no-defaults  --datadir="{{ mountdir }}/{{ mysqldir }}" --user=mysql
      when: server=="mariadb"

    - name: Generate performance scaling file
      template:
        src: performance.sh.j2
        dest: /tmp/performance.sh
        owner: root
        group: root
        mode: "0755"
        backup: false

    - name: Execute performance scaling
      shell: bash /tmp/performance.sh

    - name: Generate systemctl file
      template:
        src: mysql.service.j2
        dest: /etc/systemd/system/mysql-cd.service
        owner: root
        group: root
        mode: "0644"
        backup: false
      tags: apply-service-file

    - name: Generate client my.cnf
      template:
        src: my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: "0644"
        backup: false

    - name: Reload systemd
      shell: systemctl daemon-reload
      tags: apply-service-file

    - name: enable mysql systemd
      shell: systemctl enable mysql-cd
      tags: apply-service-file

# vim: set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
