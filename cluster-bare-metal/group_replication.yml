---
- name: Find existing UUID if it exists
  shell: >
      grep "^loose-group_replication_group_name" "{{ installdir }}/my.cnf" |
      cut -d '"' -f2
  run_once: true
  changed_when: false
  register: existing_cluster_uuid
  tags: apply-config,init-setup


- name: Generate UUID incase no previous value was present
  command: uuidgen
  run_once: true
  changed_when: false
  register: new_cluster_uuid
  tags: apply-config,init-setup

- name: Generate global mysql.cnf file for group replication
  template:
    src: mysql-{{ server }}.cnf.j2
    dest: "{{ installdir }}/my.cnf"
    owner: root
    group: root
    mode: "0644"
    backup: true
  become: true
  tags: apply-config,init-setup

- name: Start MySQL
  systemd:
    name: mysql-cd
    state: started

- name: Wait for socket
  wait_for:
    path: /tmp/mysql.sock
    state: present


#- name: Init datadir
#  shell: >
#     "{{ installdir }}/{{ mysqlbin }}/bin/ps-admin"  --enable-rocksdb
#  when: server=="ps"


- name: Check if group replication is already enabled
  shell: >
     mysql -Nnrse "SELECT service_state
     FROM performance_schema.replication_connection_status
     WHERE channel_name = 'group_replication_applier'"
  failed_when: false
  changed_when: false
  register: group_replication_running
  tags: apply-config, bootstrap

- name: Generate MySQL replication user script
  template:
    src: replication_user.sql.j2
    dest: "/tmp/replication_user.sql"
    mode: "0600"
  when: "'ON' not in group_replication_running.stdout"

- name: Set up replication user
  mysql_db:
    name: all
    state: import
    target: "/tmp/replication_user.sql"
  when: "'ON' not in group_replication_running.stdout"
  tags: setup-user

- name: Bootstrap group replication on first node
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - "SET GLOBAL group_replication_bootstrap_group=ON"
    - "START GROUP_REPLICATION"
    - "SET GLOBAL group_replication_bootstrap_group=OFF"
  when:
    - "'ON' not in group_replication_running.stdout"
    - inventory_hostname == ansible_play_hosts[0]
  tags: apply-config, bootstrap, startgr

- name: Begin group replication on remaining nodes
  command: mysql -ne "START GROUP_REPLICATION"
  when:
    - "'ON' not in group_replication_running.stdout"
    - inventory_hostname != ansible_play_hosts[0]
  tags: apply-config, bootstrap, stratgr
